<views:MainWindow xmlns="https://github.com/avaloniaui"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:ctrls="clr-namespace:M64RPFW.Views.Avalonia.Controls"
                  xmlns:views="clr-namespace:M64RPFW.Views.Avalonia.Views"
                  xmlns:vm="clr-namespace:M64RPFW.ViewModels;assembly=M64RPFW.ViewModels"
                  xmlns:ext="clr-namespace:M64RPFW.Views.Avalonia.Markup"
                  xmlns:gl="clr-namespace:M64RPFW.Views.Avalonia.Controls.OpenGL"
                  mc:Ignorable="d"
                  x:Class="M64RPFW.Views.Avalonia.Views.MainWindow"
                  Icon="/Assets/rpfw.ico"
                  Title="{ext:Localize AppName}"
                  Width="640"
                  Height="480"
                  Closed="Window_OnClosed"
                  SizeChanged="Window_OnSizeChanged"
                  KeyDown="Window_OnKeyDown"
                  KeyUp="Window_OnKeyUp"
                  Loaded="Control_OnLoaded"
                  x:CompileBindings="True"
                  x:DataType="vm:EmulatorViewModel">
    <Window.Styles>
        <Style Selector="WrapPanel.menu-header Layoutable">
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
    </Window.Styles>
    <Window.KeyBindings>
        <!-- add non-menuitem keybindings here -->
    </Window.KeyBindings>
    <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{ext:Localize File}">
                <!-- Opening a ROM depends on the window, thus it's part of view -->
                <!-- TODO: implement attached property or behaviour for applying both HotKey and InputGesture from a single binding value -->
                <MenuItem
                    Header="{ext:Localize OpenRom}"
                    Command="{Binding OpenRomCommand}"
                    InputGesture="{Binding OpenRomHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <!-- TODO: MenuItem itemscontrol container retemplating -->
                <!-- <MenuItem -->
                <!--     Header="{Binding Source={x:Static markupExtensions:LocalizationSource.Instance}, Path='[RecentRoms]'}" -->
                <!--     ItemsSource="{Binding Source={x:Static vm:SettingsViewModel.Instance}, Path=RecentRoms}"> -->
                <!--     <MenuItem.DataTemplates> -->
                <!-- -->
                <!--         <DataTemplate DataType="{x:Type system:String}"> -->
                <!--             <TextBlock Text="{Binding}" /> -->
                <!--         </DataTemplate> -->
                <!--     </MenuItem.DataTemplates> -->
                <!-- </MenuItem> -->

                <MenuItem
                    Header="{ext:Localize CloseRom}"
                    Command="{Binding CloseRomCommand}"
                    InputGesture="{Binding CloseRomHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize ResetRom}"
                    Command="{Binding ResetRomCommand}"
                    InputGesture="{Binding ResetRomHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <Separator />
                <MenuItem
                    Header="{ext:Localize Settings}"
                    Command="{Binding ShowSettingsCommand}" />
                <MenuItem
                    Header="{ext:Localize AdvancedSettings}"
                    Command="{Binding ShowAdvancedSettingsCommand}" />
            </MenuItem>
            <MenuItem
                Header="{ext:Localize Emulator}">
                <MenuItem
                    Header="{ext:Localize PauseOrResume}"
                    Command="{Binding PauseOrResumeCommand}"
                    InputGesture="{Binding PauseOrResumeHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize FrameAdvance}"
                    Command="{Binding FrameAdvanceCommand}"
                    InputGesture="{Binding FrameAdvanceHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <Separator />
                <MenuItem
                    Header="{ext:Localize LoadFromFile}"
                    Command="{Binding LoadFromFileCommand}"
                    InputGesture="{Binding LoadFromFileHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize SaveToFile}"
                    Command="{Binding SaveToFileCommand}"
                    InputGesture="{Binding SaveToFileHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize LoadState}"
                    Command="{Binding LoadCurrentSlotCommand}"
                    InputGesture="{Binding LoadCurrentSlotHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize SaveState}"
                    Command="{Binding SaveCurrentSlotCommand}"
                    InputGesture="{Binding SaveCurrentSlotHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <Separator />
                <!-- Jank incoming! (Avalonia doesn't have RadioMenuItem, and I can't really implement one) -->
                <MenuItem
                    Header="{ext:Localize CurrentSlot}"
                    SelectedItem="{Binding CurrentSlotMenuItem,Mode=OneWayToSource}">
                    <MenuItem.Styles>
                        <Style Selector="MenuItem">
                            <Setter Property="Header">
                                <Setter.Value>
                                    <Template>
                                        <!-- Need a way to make this actually show the current slot -->
                                        <ctrls:ClickableRadioButton IsHitTestVisible="False" Content="{Binding .}"
                                                                    GroupName="CurrentSlotMenu" />
                                    </Template>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Command" Value="{Binding SetSaveSlotCommand}" />
                        </Style>
                    </MenuItem.Styles>
                    <MenuItem.Items>
                        <x:Int32>0</x:Int32>
                        <x:Int32>1</x:Int32>
                        <x:Int32>2</x:Int32>
                        <x:Int32>3</x:Int32>
                        <x:Int32>4</x:Int32>
                        <x:Int32>5</x:Int32>
                        <x:Int32>6</x:Int32>
                        <x:Int32>7</x:Int32>
                        <x:Int32>8</x:Int32>
                        <x:Int32>9</x:Int32>
                    </MenuItem.Items>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{ext:Localize Movie}">
                <MenuItem
                    Header="{ext:Localize StartPlaying}"
                    Command="{Binding StartMovieCommand}"
                    InputGesture="{Binding StartMovieHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize StartRecording}"
                    Command="{Binding StartRecordingCommand}"
                    InputGesture="{Binding StartRecordingHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <Separator />
                <MenuItem
                    Header="{ext:Localize StopMovie}"
                    Command="{Binding StopMovieCommand}"
                    InputGesture="{Binding StopMovieHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize RestartMovie}"
                    Command="{Binding RestartMovieCommand}"
                    InputGesture="{Binding RestartMovieHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}" />
                <MenuItem
                    Header="{ext:Localize DisableWrites}"
                    Command="{Binding ToggleDisableWritesCommand}"
                    InputGesture="{Binding DisableWritesHotkey, Source={x:Static vm:SettingsViewModel.Instance}, Converter={StaticResource StringToKeyGestureConverter}}">
                    <MenuItem.Icon>
                        <!-- Incredibly jank, but this works somehow -->
                        <CheckBox IsHitTestVisible="False" IsChecked="{Binding VCRDisableWrites}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem
                    Header="{ext:Localize StartEncoder}"
                    IsEnabled="False" />
                <MenuItem
                    Header="{ext:Localize StopEncoder}"
                    IsEnabled="False" />
            </MenuItem>
            <MenuItem Header="{ext:Localize Lua}">
                <MenuItem
                    Header="{ext:Localize NewLuaInstance}" Click="MenuItem_OnClick" />
            </MenuItem>
        </Menu>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" x:Name="StatusBar">
            <!--TODO: Status bar-->
        </StackPanel>
        <gl:WindowedGlControl 
            PointerPressed="SkiaOnPointerPressed"
            PointerReleased="SkiaOnPointerReleased"
            PointerMoved="SkiaOnPointerUpdate"
            PointerEntered="SkiaOnPointerUpdate"
            PointerExited="SkiaOnPointerUpdate"
            OnSkiaRender="SkiaOnRender" 
            x:Name="GlControl"/>
    </DockPanel>

</views:MainWindow>